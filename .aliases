#!/bin/bash

ls() {
    if [[ -t 1 ]]
    then
        #paginate ls output with less
        command ls -F --color=always "$@" | less -XFR
    else
        # don't pipe to less if piping output to something else
        command ls -F --color=always "$@"
    fi
}
alias ls=ls
alias sl='ls'
alias ll='ls -l'
alias la='ll -A'

alias grep='grep --color=auto'
alias igrep='grep -i'

tmux_attach() {
    tmux attach -dt "$1"
}
tmux_new() {
    tmux new -s "$1"
}
tmux_kill_session() {
    tmux kill-session -t "$1"
}
alias ta=tmux_attach
alias tl="tmux ls"
alias tn=tmux_new
alias tk=tmux_kill_session

alias nslisten='netstat -plan | grep LISTEN'

wildfly8_jvisualvm() {
  source "$HOME"/.variables
  "$JBOSS_HOME"/bin/jvisualvm
}
alias wflymonitor=wildfly8_jvisualvm

#tailF() {
#  tail -F "$@"
#}
#alias tail=tailF


alias xup='xrdb ~/.Xresources'

spellcheck_word() {
  # pipe word(s) to aspell and omit first line of result
  spelling="$(echo "$@" | aspell -a | sed -n '1!p')"
  correct=true
  for i in $(echo "$spelling" | tr "\r" "\n"); do
    if [ "$i" != "*" ]; then
      correct=false
      break
    fi
  done
  if ! $correct; then
    echo "'$@' is incorrectly spelled"
    echo "$spelling"
  else
    echo "'$@' is correctly spelled"
  fi
}

lookup_word() {
  sdcv -0cn "$@" | less -XFR
}

spellcheck_and_lookup_word() {
  spellcheck_word "$@"
  lookup_word "$@"
}

alias dict=lookup_word
alias spell=spellcheck_word
alias spelldict=spellcheck_and_lookup_word

# custom launchers

# work
alias sqlyog='wine "C:\Program Files (x86)\SQLyog\SQLyog.exe"'
#alias idea='/work/tools/ide/intellij/idea-IU-141.713.2/bin/idea.sh'
#alias idea='/work/tools/ide/intellij/idea-IU-143.381.42/bin/idea.sh'
#alias idea='/work/tools/ide/intellij/idea-IU-143.1821.5/bin/idea.sh'
alias idea='/work/tools/ide/intellij/idea-IU-145.258.11/bin/idea.sh'
#alias idea='/work/tools/ide/intellij/idea-IU-145.597.3/bin/idea.sh'
#alias eclipse='/work/tools/ide/eclipse/eclipse-java-luna-SR2-linux-gtk-x86_64/eclipse'
alias eclipse='/work/tools/ide/eclipse/eclipse-java-mars-2-linux-gtk-x86_64/eclipse'
alias datagrip='/work/tools/ide/datagrip/DataGrip-1.0.3/bin/datagrip.sh'

# javascript console
alias jsc='java -cp /work/tools/shell/jline2-jline-2.14.1/target/jline-2.14.1.jar:/work/tools/shell/rhino1.7.7.1/lib/rhino-1.7.7.1.jar org.mozilla.javascript.tools.shell.Main'

# ssh aliases
if which autossh > /dev/null; then
    alias ssh="autossh"
fi

# work
alias workstation="ssh kalvatn@10.12.121.13"
alias hans="ssh hans@10.12.100.220"

alias xmlexport-zrh1="ssh j.kalvatn@10.200.4.11"
alias xmlexport-zrh2="ssh j.kalvatn@10.200.4.12"
alias xmlexport-zrh-test="ssh j.kalvatn@10.200.4.12"
alias xmlexport-trd-test="ssh jboss@172.17.22.53"

# other
alias northrend="ssh kalvatn@northrend.bitnexus.net"




# docker

# Get latest container ID
alias dl="docker ps -l -q"
# Get container process
alias dps="docker ps"
# Get process included stop container
alias dpa="docker ps -a"
# Get images
alias di="docker images"
# Get container IP
alias dip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"
# Run deamonized container, e.g., $dkd base /bin/echo hello
alias dkd="docker run -d -P"
# Run interactive container, e.g., $dki base /bin/bash
alias dki="docker run -i -t -P"
# Execute interactive container, e.g., $dex base /bin/bash
alias dex="docker exec -i -t"
# Stop all containers
dstop() { docker stop "$(docker ps -a -q)"; }
# Remove all containers
drm() { docker rm "$(docker ps -a -q)"; }
# Stop and Remove all containers
alias drmf='docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)'
# Remove all images
dri() { docker rmi "$(docker images -q)"; }
# Dockerfile build, e.g., $dbu tcnksm/test 
dbu() { docker build -t="$1" .; }
# Show all alias related docker
dalias() { alias | grep 'docker' | sed "s/^\([^=]*\)=\(.*\)/\1 => \2/"| sed "s/['|\']//g" | sort; }
