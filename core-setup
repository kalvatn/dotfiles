#!/bin/bash

set -e


OPT="value"
opts="fvo:"

# https://thepracticalsysadmin.com/building-a-better-bash-script/
for pass in 1 2; do
  while [ -n "$1" ]; do
    case $1 in
      --) shift; break;;
      -*) case $1 in
          -f|--flag)
            FLAG=1;;
          -o|--opt)
            OPT=$2;
            shift;;
          -v|--verbose)
            VERBOSE=$(($VERBOSE + 1));;
          --*)           error $1;;
          -*)            if [ $pass -eq 1 ]; then ARGS="$ARGS $1";
                         else error $1; fi;;
          esac;;
      *)  if [ $pass -eq 1 ]; then ARGS="$ARGS $1";
          else error $1; fi;;
    esac
    shift
  done
  if [ $pass -eq 1 ]; then ARGS=`getopt $opts $ARGS`
      if [ $? != 0 ]; then usage; exit 2; fi; set -- $ARGS
  fi
done

if [ -z "$LOGLEVEL" ]; then
  echo "loglevel not set checking for verbose : $VERBOSE"
  if [ -n "$VERBOSE" ]; then
    case "$VERBOSE" in
      1) LOGLEVEL=WARN;;
      2) LOGLEVEL=INFO;;
      *) LOGLEVEL=DEBUG;;
    esac
  fi
fi

if [ -z "$LOGLEVEL" ]; then
  echo "LOGLEVEL not set, defaulting to ERROR (to set: export LOGLEVEL=[DEBUG|INFO|WARN|ERROR])"
  LOGLEVEL=ERROR
fi
export LOGLEVEL="$LOGLEVEL"
DOTFILE_ROOT="$(pwd)"
if [ "$DOTFILE_ROOT" != "$HOME/dotfiles" ]; then
  echo "must be run from $HOME/dotfiles"
  exit 1
fi
ln -fs "$DOTFILE_ROOT/.aliases" "$HOME"
ln -fs "$DOTFILE_ROOT/.variables" "$HOME"
ln -fs "$DOTFILE_ROOT/.functions" "$HOME"
source "$HOME/.functions"
cmdpid "Xorg"
./scripts/installation/git/install

git submodule update --init

./scripts/installation/vim/install
./scripts/installation/tmux/install
./scripts/installation/shell/zsh/install
exit

ln -fs "$DOTFILE_ROOT/bin" "$HOME"
ln -fs "$DOTFILE_ROOT/.gemrc" "$HOME"
ln -fs "$DOTFILE_ROOT/.my.cnf" "$HOME"
ln -fs "$DOTFILE_ROOT/.notify-osd" "$HOME"
ln -fs "$DOTFILE_ROOT/.asoundrc" "$HOME"
ln -fs "$DOTFILE_ROOT/.xinitrc" "$HOME"
ln -fs "$DOTFILE_ROOT/.Xresources" "$HOME"
ln -fs "$DOTFILE_ROOT/.urxvt" "$HOME"



# warn about missing packages

# linter packages

# bash
[[ -z "$(which shellcheck)" ]] && echo "sudo apt-get install shellcheck" || echo "shellcheck installed"
[[ -z "$(which bashate)" ]] && echo "sudo apt-get install python-pip && sudo pip install bashate" || echo "bashate installed"
# markdown
[[ -z "$(which mdl)" ]] && echo "sudo gem install mdl" || echo "mdl installed"
# pylint
[[ -z "$(which pylint)" ]] && echo "sudo pip install pylint" || echo "pylint installed"


# various other tools
[[ -z "$(which feh)" ]] && echo "sudo apt-get install feh" || echo "feh installed"
[[ -z "$(which scrot)" ]] && echo "sudo apt-get install scrot" || echo "scrot installed"
[[ -z "$(which unclutter)" ]] && echo "sudo apt-get install unclutter" || echo "unclutter installed"
