#!/usr/bin/env python3

# http://stackoverflow.com/questions/1616678/bash-pwd-shortening
import sys
import os

DEFAULT_MAX_LENGTH = 20
#SUBSTITUTION_STR='..'
SUBSTITUTION_STR = ''
SUBSTITUTION_LENGTH = len(SUBSTITUTION_STR) + 1
KNOWN_PATHS = {
    '/home/' + os.environ['USER'] : '~'
}

def abbreviate_path():
    try:
        path = sys.argv[1]
        length = DEFAULT_MAX_LENGTH
        if len(sys.argv) > 2:
            length = int(sys.argv[2])
            length = length if length >= DEFAULT_MAX_LENGTH else DEFAULT_MAX_LENGTH
        #print "path : %s, length : %d, max_length : %d" % (path, len(path), length)
    except (KeyError, IndexError):
        print("usage: $0 <path> [length>=%d]" % DEFAULT_MAX_LENGTH, file=sys.stderr)
        sys.exit(1)

    for known_path, known_path_replacement in KNOWN_PATHS.items():
        path = path.replace(known_path, known_path_replacement)

    while len(path) > length:
        dirs = path.split("/")

        # find the longest directory in the path.
        max_index = -1
        max_length = 3

        for i in range(len(dirs) - 1):
            if len(dirs[i]) > max_length:
                max_index = i
                max_length = len(dirs[i])

        # shorten it by one character.
        if max_index >= 0:
            #dirs[max_index] = dirs[max_index][:max_length-3] + ".."
            dirs[max_index] = dirs[max_index][:max_length-SUBSTITUTION_LENGTH] + SUBSTITUTION_STR
            path = "/".join(dirs)
            # Didn't find anything to shorten. This is as good as it gets.
        else:
            break
    return path

if __name__ == '__main__':
    print(abbreviate_path())
